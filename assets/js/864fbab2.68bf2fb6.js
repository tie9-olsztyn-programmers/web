"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[3364],{8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var o=i(6540);const s={},a=o.createContext(s);function c(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(a.Provider,{value:n},e.children)}},9336:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>j,frontMatter:()=>c,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"MERN - Fullstack/Praca z mongoose","title":"Praca z mongoose - apka Task","description":"Poznamy prac\u0119 z bibliotek\u0105 mongoose na przyk\u0142adzie aplikacji Task, w kt\xf3rej zadanie mam tytu\u0142 i kr\xf3tki opis.","source":"@site/docs/5. MERN - Fullstack/3. Praca z mongoose.mdx","sourceDirName":"5. MERN - Fullstack","slug":"/MERN - Fullstack/Praca z mongoose","permalink":"/web/docs/MERN - Fullstack/Praca z mongoose","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5. MERN - Fullstack/3. Praca z mongoose.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Praca z mongoose - apka Task"},"sidebar":"tutorialSidebar","previous":{"title":"Po\u0142\u0105czenie MongoDB-ExpressTS","permalink":"/web/docs/MERN - Fullstack/Pod\u0142\u0105czenie do MongoDB"},"next":{"title":"Routes dla Tasks","permalink":"/web/docs/MERN - Fullstack/Routes dla Task"}}');var s=i(4848),a=i(8453);const c={title:"Praca z mongoose - apka Task"},d=void 0,t={},r=[{value:"Metafora pieczenie ciastek",id:"metafora-pieczenie-ciastek",level:2}];function l(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Poznamy prac\u0119 z bibliotek\u0105 ",(0,s.jsx)(n.code,{children:"mongoose"})," na przyk\u0142adzie aplikacji ",(0,s.jsx)(n.code,{children:"Task"}),", w kt\xf3rej zadanie mam tytu\u0142 i kr\xf3tki opis."]}),"\n",(0,s.jsx)(n.admonition,{title:"Interfejs (Interface)",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["to definicja typ\xf3w w ",(0,s.jsx)(n.em,{children:"TypeScript"}),", kt\xf3ra m\xf3wi,","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"jakie pola powinny znajdowa\u0107 si\u0119 w obiekcie,"}),"\n",(0,s.jsx)(n.li,{children:"jaki typ danych b\u0119dzie przechowywany w tych polach,"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"nie tworzy rzeczywistych danych w bazie, tylko s\u0142u\u017cy do sprawdzania poprawno\u015bci typ\xf3w."}),"\n"]})}),"\n",(0,s.jsx)(n.admonition,{title:"Schemat (mongoose.Schema)",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"to szablon dokument\xf3w w kolekcji (okre\u015bla struktur\u0119 danych w MongoDB i m\xf3wi, jakie pola powinny znale\u017a\u0107 si\u0119 dokumencie"}),"\n",(0,s.jsx)(n.li,{children:"wskazuje, jakie pola b\u0119d\u0105 przechowywane i jakie maj\u0105 typy."}),"\n",(0,s.jsxs)(n.li,{children:["w przeciwie\u0144stwie do interfejsu, ",(0,s.jsx)(n.code,{children:"Schema"})," wp\u0142ywa na baz\u0119 danych \u2013 decyduje, jakie dane b\u0119d\u0105 zapisywane."]}),"\n",(0,s.jsx)(n.li,{children:"u\u017cywamy, gdy chcemy okre\u015bli\u0107, jakie dane s\u0105 przechowywane w bazie"}),"\n"]})}),"\n",(0,s.jsx)(n.admonition,{title:"Model",type:"tip",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"to interfejs do bazy danych"}),"\n",(0,s.jsx)(n.li,{children:"to on pozwala na zapisywanie, pobieranie i aktualizowanie dokument\xf3w."}),"\n",(0,s.jsx)(n.li,{children:"\u0142\u0105czy schemat i interfejs, umo\u017cliwiaj\u0105c operacje na MongoDB"}),"\n",(0,s.jsxs)(n.li,{children:["u\u017cywamy, gdy chcemy wykonywa\u0107 ",(0,s.jsx)(n.em,{children:"CRUD"})," na bazie danych"]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"metafora-pieczenie-ciastek",children:"Metafora pieczenie ciastek"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Poj\u0119cie"}),(0,s.jsx)(n.th,{children:"W metaforze ciastek"}),(0,s.jsx)(n.th,{children:"W Mongoose/TypeScript"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Interface (TS)"}),(0,s.jsx)(n.td,{children:"Szablon-wyciskarka (foremka) na ciastko \u2013 okre\u015bla kszta\u0142t, rozmiar i to, co musi si\u0119 znale\u017a\u0107 w \u015brodku (np. dziurki, wzorki)."}),(0,s.jsx)(n.td,{children:"Definiuje w kodzie TypeScript kszta\u0142t obiektu: jakie pola (np. name: string, age: number) i typy maj\u0105 mie\u0107 dane w aplikacji."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Schema (Mongoose)"}),(0,s.jsx)(n.td,{children:"Przepis \u2013 lista sk\u0142adnik\xf3w (m\u0105ka, cukier, jajka), ich ilo\u015bci i regu\u0142y (np. ciasto nie mo\u017ce mie\u0107 wi\u0119cej ni\u017c 30% cukru)."}),(0,s.jsx)(n.td,{children:"Mongoose Schema wymusza w bazie: jakie pola, jakie typy, jakie walidacje (wymagane, unikalne, domy\u015blne warto\u015bci) maj\u0105 mie\u0107 dokumenty MongoDB."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Model (Mongoose)"}),(0,s.jsx)(n.td,{children:"Piekarz i jego linia produkcyjna \u2013 bierze foremki i przepis, produkuje naprawd\u0119 pachn\u0105ce ciastka, przechowuje je w pude\u0142kach i wydaje klientowi."}),(0,s.jsx)(n.td,{children:"Mongoose Model to klasa, kt\xf3r\u0105 u\u017cywasz w kodzie do tworzenia, czytania, modyfikowania i usuwania dokument\xf3w w kolekcji. \u201eWie\u201d, jak walidowa\u0107 wed\u0142ug Schemy i zwraca\u0107 obiekty zgodne z Interface."})]})]})]}),"\n",(0,s.jsxs)(n.h1,{id:"nowy-plik-modelstaskts",children:["Nowy plik ",(0,s.jsx)(n.code,{children:"/models/Task.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import mongoose, { Document } from \"mongoose\";\n\nexport interface Task extends Document {\n    title: string;\n    description: string;\n    completed: boolean;\n}\n\nconst TaskSchema = new mongoose.Schema({\ntitle: {type: String, required: true},\ndescription: {type: String, required: true},\ncompleted: {type: Boolean, default: false},\n})\n\nexport default mongoose.model<Task>('Task', TaskSchema);\n"})}),"\n",(0,s.jsxs)(n.h1,{id:"wyja\u015bnienie-do-pliku-taskts",children:["Wyja\u015bnienie do pliku ",(0,s.jsx)(n.code,{children:"Task.ts"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Document"})," typ z ",(0,s.jsx)(n.em,{children:"Mongoose"}),", kt\xf3ry reprezentuje dokument MongoDB w TypeScript"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Task extends Document"})," -"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Task"})," rozszerza(dziedziczy po) ",(0,s.jsx)(n.code,{children:"Document"}),", wi\u0119c TypeScript wie, \u017ce jest to dokument MongoDB."]}),"\n",(0,s.jsx)(n.li,{children:"teraz TypeScript podpowiada nam, \u017ce w\u0142a\u015bciwo\u015bci obiektu musz\u0105 by\u0107 okre\u015blonego typu (np. title musi by\u0107 string)"}),"\n",(0,s.jsx)(n.li,{children:"u\u017cywamy, gdy chcemy mie\u0107 podpowiedzi i bezpiecze\u0144stwo typ\xf3w w kodzie"}),"\n",(0,s.jsxs)(n.li,{children:["dzi\u0119ki temu dziedziczeniu ",(0,s.jsx)(n.code,{children:"Task"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["ma w\u0142a\u015bciwo\u015b\u0107 ",(0,s.jsx)(n.code,{children:"_id"})]}),"\n",(0,s.jsxs)(n.li,{children:["ma dost\u0119p do metod Mongoose:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"instancyjnych"})," (wywo\u0142ywanych na obiekcie np. task.save()"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"save()"})," - zapis dokumentu do bazy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"deleteOne()"})," - usuwa dokument z bazy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"updateOne()"})," - aktualizuje jeden dokument"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"toObject()"})," - konwersja do zwyk\u0142ego obiektu"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"toJSON()"})," - konwersja do JSON"]}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"statyczne"})," (wywo\u0142ywane na modelu, dzia\u0142aj\u0105 na ca\u0142ej kolekcji)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"find()"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"findById(id)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"findOne({})"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"findByIdAndUpdate(id, {})"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"findByIdAndDelete(id)"})}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"TaskSchema"})," - schemat MongoDB, kt\xf3ry m\xf3wi bazie danych, jakie pola maj\u0105 mie\u0107 dokumenty"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"export default mongoose.model<Task>('Task', TaskSchema);"})," - exportujemy model ",(0,s.jsx)(n.code,{children:"Task"}),", kt\xf3ry bazuje na ",(0,s.jsx)(n.code,{children:"TaskSchema"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'Task'"}),"  - nazwa kolekcji w MongoDB (w bazie pojawi si\u0119 jako kolekcja ",(0,s.jsx)(n.code,{children:"tasks"}),', bo Mongo dodaje "s" na ko\u0144cu']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"<Task>"}),"  - model u\u017cywa interfejsu, co pozwala na lepsze autouzupe\u0142niania i typowanie w edytorze"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"c.d.n. -> Routes"})]})}function j(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);